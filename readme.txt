1. Antlr 能干啥？
    antlr是一个语法分析器生成工具，可用于读取，处理，执行和翻译结构化的文本或二进制文件。
    它能根据用户定义的语法文件自动生成词法分析器和语法分析器，并将输入文本处理为语法分析树。需要的就是一个描述该语言的语法文件就是.g4文件
2. 基本概念
    上层由下层组成
    语言<language>
         语句 <sentense>
                词组 <phrase>
                        子词组<subphrase> 和 词汇符号<vocabulary symbol>

    解释器: 一个程序能够分析计算或者执行语句，就可以称之为解释器<interpreter>
    翻译器: 一个程序能够将一门语言的语句转换为另外一门语言的语句，就可以称之为翻译器<translator>
    语法分析器<parser>或句法分析器<syntax analyzer>：识别语言的程序.
    句法<syntax> :指约束语言中的各个组成部分之间关系的规则。

3. antlr中的基本概念
    语法<grammer>: 一系列规则的集合，每条规则表示一种词汇结构
    antlr元语言：通过该语言来专门描述其他语言的语法
    词法分析：将字符聚集成为单词或者符号(词法符号<token>)称之为词法分析<lexical analysis> 或者词法符号化<tokenizing>
    词法分析器<lexer>：将输入文本转换为词法符号的程序称之为词法分析器<lexer>，词法分析器可以将相关的词法符号归类，如 INT,ID(标识符),FLOAT 等，当语法分析器不关心单个符号，而仅关心符号类型时，词法分析器就需要将词汇符号归类，
                     词法符号至少包含两部分：词法符号的类型(从而通过类型来识别词法结构)和该词法符号对应的文本。
4. ANTLR 解决歧义
    歧义：当规则出现歧义时，选择所有匹配的备选分支中的第一条。
5. 词法分析器处理字符序列并将生成的词法符号扔给语法分析器，语法分析器随机根据这些信息来检查语法的正确性并建造出一棵语法树，这个过程对应的ANTLR类是CharStream,Lexer,Token,Parser以及ParseTree.
    连接词法分析器和语法分析器的管道叫TokenStream

